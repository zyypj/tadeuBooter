name: Build e Release do TadeuBooter

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Dar permissão de execução ao gradlew
        run: chmod +x gradlew

      - name: Configurar o JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: gradle

      - name: Compilar o projeto com Gradle (sem testes)
        run: ./gradlew clean assemble -x test

      - name: Executar testes
        run: ./gradlew test

      - name: Extrair versão do build.gradle.kts raiz
        id: get_version
        run: |
          # Procura `version = "x.y.z"` no build.gradle.kts do root
          VERSION=$(
            grep -E '^\s*version\\s*=\\s*".*"' build.gradle.kts \
            | head -1 \
            | sed -E 's/.*version\\s*=\\s*"(.*)".*/\\1/'
          )
          if [ -z "$VERSION" ]; then
            echo "##[error]Não foi possível extrair a versão de build.gradle.kts"
            exit 1
          fi
          echo "$VERSION" > version.txt
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Salvar versão para o próximo job
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: version.txt

      - name: Publicar artefato do JAR
        uses: actions/upload-artifact@v4
        with:
          name: tadeuBooter-${{ env.VERSION }}
          path: build/libs/*.jar

  release:
    if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Baixar a versão salva
        uses: actions/download-artifact@v4
        with:
          name: version
          path: .

      - name: Definir variável de versão
        run: echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV

      - name: Criar e enviar tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}

      - name: Baixar o JAR compilado
        uses: actions/download-artifact@v4
        with:
          name: tadeuBooter-${{ env.VERSION }}
          path: build/libs/

      - name: Extrair commits para release
        id: commits
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --pretty=format:'* %h - %s (%an)' -n 20)
          else
            COMMITS=$(git log --pretty=format:'* %h - %s (%an)' $LAST_TAG..HEAD)
          fi
          echo "commit_list<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Criar Release no GitHub
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          files: build/libs/*.jar
          body: |
            Versão ${{ env.VERSION }} do TadeuBooter

            Commits incluídos:
            ${{ steps.commits.outputs.commit_list }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
